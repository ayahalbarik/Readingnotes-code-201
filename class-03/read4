# HTML Links - Hyperlinks
HTML links are hyperlinks.

You can click on a link and jump to another document.
When you move the mouse over a link, the mouse arrow will turn into a little hand.

** Note: A link does not have to be text. A link can be an image or any other HTML element!

<a href="url">link text</a>
The most important attribute of the <a> element is the href attribute, which indicates the link's destination.
The link text is the part that will be visible to the reader.
Clicking on the link text, will send the reader to the specified URL address.


## HTML Layout Elements
HTML has several semantic elements that define the different parts of a web page:

HTML5 Semantic Elements	
<header> - Defines a header for a document or a section
<nav> - Defines a set of navigation links
<section> - Defines a section in a document
<article> - Defines an independent, self-contained content
<aside> - Defines content aside from the content (like a sidebar)
<footer> - Defines a footer for a document or a section
<details> - Defines additional details that the user can open and close on demand
<summary> - Defines a heading for the <details> element


### Function 
A method is a function associated with an object, or, put differently,
 a method is a property of an object that is a function. Methods are defined the way normal functions are defined, 
 except that they have to be assigned as the property of an object. See also method definitions for more details. 
An example is:
objectName.methodname = functionName;

var myObj = {
  myMethod: function(params) {
    // ...do something
  }

  // OR THIS WORKS TOO

  myOtherMethod(params) {
    // ...do something else
  }
};



#### 6 Reasons for Pair Programming
Iterative loops. Code reviews. Fast feedback. Error checking and linting.
 These are software engineering practices that have proven to dramatically improve the quality of code developers produce. What if you can could get all of this, instantaneously, while typing code line by line and character by character? You can, with pair programming, 
a technique common to many agile work environments.

Why pair program?
While learning to code, developers likely study several programming languages. Similar to a foreign language class, there are four fundamental skills that help anyone learn a new language: Listening: hearing and interpreting the vocabulary Speaking: using the correct words to communicate an idea Reading: understanding what written language intends to convey Writing: producing from scratch a meaningful

Pair programming touches on all four skills: developers explain out loud what the code should do, 
listen to othersâ€™ guidance, read code that others have written, and write code themselves.

so we pair programming :
1. Greater efficiency
2. Engaged collaboration
3. Learning from fellow students
4. Social skills
5.  Job interview readiness
6. Work environment readiness
